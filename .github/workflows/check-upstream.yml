name: Check for Upstream Changes and Build APK

on:
  schedule:
    # Runs at 12:00 UTC every day
    - cron: '0 12 * * *'
  workflow_dispatch: # Allows you to manually trigger the workflow

jobs:
  check-upstream:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up Git
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Step 2: Checkout your repository (forked repo)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # Step 3: Add upstream remote and fetch
      - name: Add upstream repository
        run: |
          git remote add upstream https://github.com/android/ai-samples.git
          git fetch upstream
          git checkout main

      # Step 4: Check for upstream changes
      - name: Check for upstream changes
        id: upstream_changes
        run: |
          git fetch upstream
          UPSTREAM_COMMITS=$(git rev-list HEAD..upstream/main --count)
          echo "::set-output name=commits::$UPSTREAM_COMMITS"
      
      # Step 5: Merge upstream changes if necessary
      - name: Merge upstream changes
        if: upstream_changes.outputs.commits != '0'
        run: |
          git merge upstream/main
          git push origin main

  build:
    needs: check-upstream
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository after merging upstream changes
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Step 3: Install Gradle
      - name: Install Gradle
        run: sudo apt-get update && sudo apt-get install gradle -y

      # Step 4: Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 5: Build the APK with installed Gradle
      - name: Build with Gradle
        run: gradle assembleDebug

      # Step 6: Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: app/build/outputs/apk/debug/app-debug.apk
